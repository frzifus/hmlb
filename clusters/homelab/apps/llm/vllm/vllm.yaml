---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm
  namespace: llm
  labels:
    app: vllm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: vllm
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-sdk: "true"
      labels:
        app: vllm
        # validation.rhtas.redhat.com/ml: "true"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "gpu.intel.com/device-id.0300-56a0.present"
                operator: "In"
                values:
                - "true"
      containers:
      - command:
          - /bin/sh
          - -c
          - |
            pip install \
              'opentelemetry-sdk>=1.26.0,<1.27.0' \
              'opentelemetry-api>=1.26.0,<1.27.0' \
              'opentelemetry-exporter-otlp>=1.26.0,<1.27.0' \
              'opentelemetry-semantic-conventions-ai>=0.4.1,<0.5.0'
            source /opt/intel/1ccl-wks/setvars.sh
            python -m ipex_llm.vllm.xpu.entrypoints.openai.api_server \
              --otlp-traces-endpoint="$OTEL_EXPORTER_OTLP_ENDPOINT" \
              --served-model-name $SERVED_MODEL_NAME \
              --model $MODEL_PATH \
              --trust-remote-code \
              --block-size 8 \
              --gpu-memory-utilization 0.95 \
              --device xpu \
              --dtype auto \
              --enforce-eager \
              --chat-template /app/tool_chat_template_llama3.2_json.jinja \
              --enable-auto-tool-choice \
              --tool-call-parser llama3_json \
              --max-model-len 12000 \
              --max-num-batched-tokens 12000 \
              --max-num-seqs 4 \
              --tensor-parallel-size 1 \
              --disable-async-output-proc \
              --distributed-executor-backend ray
              #--load-in-low-bit woq_int4 \
        env:
        - name: VLLM_PORT
          value: "8000"
        - name: MODEL_PATH
          #value: "ibm-granite/granite-3.3-2b-instruct"
          value: "meta-llama/Llama-3.2-3B-Instruct"
        - name: SERVED_MODEL_NAME
          value: "vllm"
        - name: VLLM_ALLOW_LONG_MAX_MODEL_LEN
          value: "1"
        - name: CCL_WORKER_COUNT
          value: "2"
        - name: SYCL_CACHE_PERSISTENT
          value: "1"
        - name: FI_PROVIDER
          value: "shm"
        - name: CCL_ATL_TRANSPORT
          value: "ofi"
        - name: CCL_ZE_IPC_EXCHANGE
          value: "sockets"
        - name: CCL_ATL_SHM
          value: "1"
        - name: USE_XETLA
          value: "OFF"
        - name: SYCL_PI_LEVEL_ZERO_USE_IMMEDIATE_COMMANDLISTS
          value: "2"
        - name: TORCH_LLM_ALLREDUCE
          value: "0"
        - name: CCL_SAME_STREAM
          value: "1"
        - name: CCL_BLOCKING_WAIT
          value: "0"
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              key: HF_TOKEN
              name: huggingface-secret
        image: intelanalytics/ipex-llm-serving-xpu:2.3.0-SNAPSHOT
        # image: vllm/vllm-openai:v0.8.4
        name: vllm
        ports:
        - containerPort: 8000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 30
        resources:
          requests:
            cpu: "50m"
            memory: "1Gi"
            gpu.intel.com/i915: 1
          limits:
            cpu: "2500m"
            memory: "12Gi"
            gpu.intel.com/i915: 1
        volumeMounts:
        - mountPath: /root/.cache
          name: hf-cache
        - mountPath: /root/.triton
          name: triton
        - mountPath: /app
          name: chat-template
        - mountPath: /.config
          name: config
      volumes:
      - name: hf-cache
        persistentVolumeClaim:
          claimName: model-cache
      - emptyDir: {}
        name: triton
      - configMap:
          defaultMode: 420
          name: llama32-3b-template
        name: chat-template
      - emptyDir: {}
        name: config
