apiVersion: v1
kind: Namespace
metadata:
  name: ollama
  labels:
    gateway.infra.services/allow-routes: "true"
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: privileged
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ollama-data
  namespace: ollama
spec:
  storageClassName: simple-and-fast-block
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: open-webui-data
  namespace: ollama
spec:
  storageClassName: simple-and-fast-block
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: open-webui-config
  namespace: ollama
data:
  OLLAMA_BASE_URL: "http://ollama:11434"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama
  namespace: ollama
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ollama
  template:
    metadata:
      labels:
        app: ollama
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: "NotIn"
                values:
                - "storage1"
              # NOTE: testing intel arc
              - key: "kubernetes.io/hostname"
                operator: "In"
                values:
                - "gpu2"
      # initContainers:
      #   - name: download-llama
      #     image: ollama/ollama:latest
      #     # NOTE: Pull does not work without serve..
      #     # https://github.com/ollama/ollama/issues/3369
      #     command:
      #       - /bin/sh
      #       - -c
      #       - |
      #         ollama serve &
      #         sleep 5 && ollama pull llama3.2:3b && ollama pull codellama && echo "Killing 'ollama serve' process"
      #         ps -ef | grep 'ollama serve' | grep -v grep | awk '{print $2}' | xargs -r kill -9
      #     volumeMounts:
      #       - mountPath: /root/.ollama
      #         name: ollama-data
      containers:
        - name: ollama
          image: intelanalytics/ipex-llm-inference-cpp-xpu:2.2.0-SNAPSHOT
          env:
            - name: OLLAMA_HOST
              value: "0.0.0.0:11434"
            - name: ZES_ENABLE_SYSMAN
              value: "1"
            - name: OLLAMA_INTEL_GPU
              value: "true"
          command:
            - /bin/sh
            - -c
            - |
              mkdir -p /llm/ollama
              cd /llm/ollama
              init-ollama
              ./ollama serve
          ports:
            - containerPort: 11434
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /root/.ollama
              name: ollama-data
          resources:
            requests:
              memory: "4096Mi"
              cpu: "1"
            limits:
              cpu: "3"
              memory: "10Gi"
      volumes:
        - name: ollama-data
          persistentVolumeClaim:
            claimName: ollama-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-webui
  namespace: ollama
spec:
  replicas: 1
  selector:
    matchLabels:
      app: open-webui
  template:
    metadata:
      labels:
        app: open-webui
    spec:
      containers:
        - name: open-webui
          image: ghcr.io/open-webui/open-webui:v0.6.0
          ports:
            - containerPort: 8080
          env:
            - name: ENABLE_WEBSOCKET_SUPPORT
              value: "0"
          envFrom:
            - configMapRef:
                name: open-webui-config
          volumeMounts:
            - mountPath: /app/backend/data
              name: open-webui-data
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
      volumes:
        - name: open-webui-data
          persistentVolumeClaim:
            claimName: open-webui-data
---
apiVersion: v1
kind: Service
metadata:
  name: ollama
  namespace: ollama
spec:
  selector:
    app: ollama
  ports:
    - protocol: TCP
      port: 11434
      targetPort: 11434
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: open-webui
  namespace: ollama
spec:
  selector:
    app: open-webui
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: open-webui
  namespace: ollama
spec:
  ingressClassName: nginx
  rules:
  - host: ollama.homelab
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: open-webui
            port:
              number: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: open-webui-tailscale
  namespace: ollama
spec:
  defaultBackend:
    service:
      name: open-webui
      port:
        number: 3000
  ingressClassName: tailscale
  tls:
    - hosts:
        - ollama
