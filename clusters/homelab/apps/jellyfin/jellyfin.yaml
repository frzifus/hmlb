---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jellyfin
  name: jellyfin
  namespace: jellyfin
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
      annotations:
        instrumentation.opentelemetry.io/inject-dotnet: "true"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "gpu.intel.com/device-id.0300-56a0.present"
                operator: "In"
                values:
                - "true"
      volumes:
      - name: nfs-jellyfin-config
        persistentVolumeClaim:
          claimName: jellyfin-pvc-config
      - name: nfs-jellyfin-data
        persistentVolumeClaim:
          claimName: jellyfin-media-data
      - name: cache
        emptyDir:
          medium: Memory
          sizeLimit: 4Gi
      containers:
      - env:
        - name: TZ
          value: Europe/Berlin
        securityContext:
          privileged: false
        image: jellyfin/jellyfin:10.10.7 # Note: this image in particular has the OpenCL runtime
        imagePullPolicy: Always
        name: jellyfin
        ports:
        - containerPort: 8096
          name: http-tcp
          protocol: TCP
        - containerPort: 8920
          name: https-tcp
          protocol: TCP
        - containerPort: 1900
          name: dlna-udp
          protocol: UDP
        - containerPort: 7359
          name: discovery-udp
          protocol: UDP
        resources:
          requests:
            cpu: "250m"
            memory: "1Gi"
          limits:
            cpu: "3500m"
            memory: "8Gi"
            gpu.intel.com/i915: 1
            # amd.com/gpu: 1
        stdin: true
        tty: true
        volumeMounts:
        - mountPath: /config
          name: nfs-jellyfin-config
        - mountPath: /data
          name: nfs-jellyfin-data
        - name: cache
          mountPath: /cache
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  selector:
    app: jellyfin
  ports:
    - protocol: TCP
      port: 8096
      targetPort: 8096
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  ingressClassName: nginx
  rules:
  - host: jellyfin.homelab
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jellyfin
            port:
              number: 8096
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: media
  namespace: jellyfin
  # labels:
  #   external-dns: "true"
spec:
  parentRefs:
    - name: services
      namespace: infra
      sectionName: main
  hostnames: [
  "jellyfin.overseer.work"
  ]
  rules:
    - backendRefs:
        - group: ""
          kind: Service
          name: jellyfin
          port: 8096
